#version 330

in vec3 n_eye;
in vec3 FragPos;
in vec3 Normal;

uniform vec3 lightPos=vec3(1.2f, 1.0f, 2.0f);
uniform vec3 viewPos=vec3(0.0f, 0.0f, 5.0f);//camera position
uniform vec3 objectColor=vec3(1.0f, 0.5f, 0.31f);//
uniform vec3 lightColor=vec3(1.0f, 1.0f, 1.0f);//white color

out vec4 frag_colour;

void main(){
	//frag_colour = vec4 (n_eye, 1.0);
	//ambient
	float ambientStrength=0.1f;
	vec3 ambient=ambientStrength*lightColor;

	//diffuse
	vec3 norm=normalize(Normal);
	vec3 lightDir=normalize(lightPos-FragPos);
	//float NdotL=max(dot(norm,lightDir),0);
	float diff=max(dot(norm,lightDir),0.0);
	vec3 diffuse=diff*lightColor;

	//specular
	float specularStrength = 0.5f;
	vec3 viewDir=normalize(viewPos-FragPos);
	vec3 reflectDir=reflect(-lightPos,norm);
	float spec=pow(max(dot(viewDir,reflectDir),0.0),2);//2,4,8,16,32shininess
	vec3 specular=specularStrength*spec*lightColor;

	vec3 result= (ambient+diffuse+specular)*objectColor;
//	if( diff<0.5)    result = vec3(0.3,0.3,0.3)*objectColor;
//	else if(diff>=0.5 && diff<0.85)    result = diffuse*objectColor;
//	else    result = specular*objectColor;
	frag_colour = vec4 (result, 1.0);
}